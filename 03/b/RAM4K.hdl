// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    Not(in=address[0], out=nad0);
    Not(in=address[1], out=nad1);
    Not(in=address[2], out=nad2);

    And(a=nad0, b=nad1, out=lsb0);
    And(a=address[0], b=nad1, out=lsb1);
    And(a=nad0, b=address[1], out=lsb2);
    And(a=address[0], b=address[1], out=lsb3);

    And(a=lsb0, b=nad2, out=ram0);
    And(a=lsb1, b=nad2, out=ram1);
    And(a=lsb2, b=nad2, out=ram2);
    And(a=lsb3, b=nad2, out=ram3);
    And(a=lsb0, b=address[2], out=ram4);
    And(a=lsb1, b=address[2], out=ram5);
    And(a=lsb2, b=address[2], out=ram6);
    And(a=lsb3, b=address[2], out=ram7);

    Mux16(sel=ram0, b=true, a=false, out=ram016);
    Mux16(sel=ram1, b=true, a=false, out=ram116);
    Mux16(sel=ram2, b=true, a=false, out=ram216);
    Mux16(sel=ram3, b=true, a=false, out=ram316);
    Mux16(sel=ram4, b=true, a=false, out=ram416);
    Mux16(sel=ram5, b=true, a=false, out=ram516);
    Mux16(sel=ram6, b=true, a=false, out=ram616);
    Mux16(sel=ram7, b=true, a=false, out=ram716);

    And(a=load, b=ram0, out=load0);
    And(a=load, b=ram1, out=load1);
    And(a=load, b=ram2, out=load2);
    And(a=load, b=ram3, out=load3);
    And(a=load, b=ram4, out=load4);
    And(a=load, b=ram5, out=load5);
    And(a=load, b=ram6, out=load6);
    And(a=load, b=ram7, out=load7);

    RAM512(in=in, load=load0, address=address[3..11], out=out0);
    RAM512(in=in, load=load1, address=address[3..11], out=out1);
    RAM512(in=in, load=load2, address=address[3..11], out=out2);
    RAM512(in=in, load=load3, address=address[3..11], out=out3);
    RAM512(in=in, load=load4, address=address[3..11], out=out4);
    RAM512(in=in, load=load5, address=address[3..11], out=out5);
    RAM512(in=in, load=load6, address=address[3..11], out=out6);
    RAM512(in=in, load=load7, address=address[3..11], out=out7);

    And16(a=ram016, b=out0, out=a0);
    And16(a=ram116, b=out1, out=a1);
    And16(a=ram216, b=out2, out=a2);
    And16(a=ram316, b=out3, out=a3);
    And16(a=ram416, b=out4, out=a4);
    And16(a=ram516, b=out5, out=a5);
    And16(a=ram616, b=out6, out=a6);
    And16(a=ram716, b=out7, out=a7);

    Or16(a=a0, b=a1, out=or0);
    Or16(a=a2, b=or0, out=or1);
    Or16(a=a3, b=or1, out=or2);
    Or16(a=a4, b=or2, out=or3);
    Or16(a=a5, b=or3, out=or4);
    Or16(a=a6, b=or4, out=or5);
    Or16(a=a7, b=or5, out=out);
}